Модульна контрольна робота №1
Архітектура програмного забезпечення
Варіант 6

1. Патерни GoF. Стан.

Паттерни проектування (GoF)

Паттерн проектування - це поширене рішення певної проблеми при проектуванні архітектури програм.
На відміну від готових функцій або бібліотек, патерн не можна просто взяти та скопіювати у програму. 
Паттерн є не якимось конкретним кодом, а загальною концепцією або прикладом вирішення тієї чи іншої проблеми, яку потрібно буде підлаштувати під потреби вашої програми.
Паттерни часто плутають із алгоритмами, адже обидва поняття описують типові рішення якихось відомих проблем. 
І якщо алгоритм - це чіткий набір дій, то патерн - це високорівневий опис рішення, реалізація якого може відрізнятися у різних програмах. 
Якщо навести аналогії, то алгоритм – це кулінарний рецепт із чіткими кроками, а патерн – інженерний креслення, на якому намальовано рішення, 
але не конкретні кроки його отримання.

Описи патернів зазвичай формальні і найчастіше складаються з таких пунктів:
 - проблеми, яку вирішує патерн;
 - мотивації до вирішення проблеми у спосіб, який пропонує патерн;
 - структури класів, що становлять рішення;
 - приклад на одній з мов програмування;
 - особливостей реалізації у різних контекстах;
 - зв'язків з іншими патернами.


Стан (State)

Призначення:
Дозволяє об'єкту варіювати свою поведінку залежно від внутрішнього стану. Ззовні складається враження, що змінився клас об'єкта.
Паттерн "Стан" передбачає виділення базового класу або інтерфейсу для всіх допустимих операцій та спадкоємця для кожного можливого стану

Коли використовувати Паттерн State:
 - Коли поведінка об'єкта має залежати від його стану та може змінюватися динамічно під час виконання
 - Коли в коді методів об'єкта використовуються численні умовні конструкції, вибір яких залежить від стану об'єкта
